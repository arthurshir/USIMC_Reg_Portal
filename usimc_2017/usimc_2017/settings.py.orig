"""
Django settings for usimc_2017 project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
<<<<<<< HEAD
from os.path import abspath, basename, dirname, join, normpath

# Replace BASE_DIR with this
BASE_DIR = os.path.dirname(os.path.dirname((__file__)))
SITE_ROOT = dirname(BASE_DIR)  
SITE_NAME = basename(BASE_DIR)
=======
import sys

import dotenv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Load Environment variables
dotenv.load_dotenv( os.path.join(BASE_DIR, '.env'))
>>>>>>> django_only

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', '123456')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

<<<<<<< HEAD
# ALLOWED_HOSTS = ['0.0.0.0']
=======
ALLOWED_HOSTS = ['127.0.0.1', 'usimc2017registration']
>>>>>>> django_only

print "DEBUG=", "True" if DEBUG else "False"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'registration_site',
    'crispy_forms',
<<<<<<< HEAD
    # DRF
    'rest_framework',
    # DRF jwt
    'rest_framework_jwt',
    # Webpack Loader
    'webpack_loader',
=======
    'django_excel',
    'phonenumber_field',
#    'stripe',
>>>>>>> django_only
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'usimc_2017.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'usimc_2017.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
# http://www.marinamele.com/taskbuster-django-tutorial/install-and-configure-posgresql-for-django

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'usimc',
        'USER': 'usimc',
<<<<<<< HEAD
        'PASSWORD': '1234',
=======
        'PASSWORD': os.environ.get('DATABASE_PASSWORD', '1234'),
>>>>>>> django_only
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}
# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Pacific'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

<<<<<<< HEAD
STATIC_URL = '/static/'  
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'), # We do this so that django's collectstatic copies or our bundles to the STATIC_ROOT or syncs them to whatever storage we use.
    # os.path.join(BASE_DIR, 'apps'), # We do this so that django's collectstatic copies or our bundles to the STATIC_ROOT or syncs them to whatever storage we use.
)

WEBPACK_LOADER = {
    'DEFAULT': {
        'BUNDLE_DIR_NAME': 'bundles/',
        'STATS_FILE': os.path.join(BASE_DIR, 'webpack-stats.json'),
    }
}

STATICFILES_FINDERS = (  
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)
=======
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
>>>>>>> django_only

# User Management

LOGIN_URL = '/login/'

# CrispyForms
# http://django-crispy-forms.readthedocs.io/en/latest/install.html

CRISPY_TEMPLATE_PACK = 'bootstrap3'

<<<<<<< HEAD


# Django REST
REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
}
=======
# Email
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'usimc2017tech'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD', 'invalid' )
EMAIL_PORT = 587
EMAIL_USE_TLS = True
>>>>>>> django_only
